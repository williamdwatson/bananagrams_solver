var searchIndex = new Map(JSON.parse('[\
["bananagrams_solver",{"t":"FSFIFGSPFPPPGGISPFSPIPFPSFPIHOOOOOHNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNHHONOONNNNNNNNNNNNNNNHHHHHHHHNNNNNNNNNNNHHHHOOOOHOOOOOONHHHHHNHOOHNNNNHNOONNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNHNOOOONNNNNNNNNN","n":["AppState","BOARD_SIZE","Board","BoardAndIdxs","CurrentSettings","Direction","EMPTY_VALUE","Finished","GameState","GreaterByMoreThanOne","GreaterByOne","Horizontal","LetterComparison","LetterUsage","Letters","MAX_WORD_LENGTH","Overused","PlayableWords","REGULAR_TILES","Remaining","Removable","Same","Solution","SomeLess","UPPERCASE","UndoRedo","Vertical","Word","_board_to_string","all_words_long","all_words_short","arr","board","board","board_to_vec","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_filter_after_play","check_filter_after_play_later","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert_array_to_word","convert_word_to_array","elapsed","eq","filter_letters_on_board","filter_letters_on_board","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_board_overlap","get_col_limits","get_new_min_max","get_playable_words","get_random_letters","get_removable_indices","get_row_limits","get_settings","get_val","into","into","into","into","into","into","into","into","into","into","is_board_valid_horizontal","is_board_valid_vertical","is_connected","is_makeable","last_game","letters","letters","long","main","max_col","max_row","maximum_words_to_check","maximum_words_to_check","min_col","min_row","new","play_bananagrams","play_existing","play_further","play_one_letter","play_removing","play_word","redo","redo_possible","redo_stack","reset","serialize","serialize","serialize","serialize","set_settings","set_val","short","solution","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_play_word_horizontal","try_play_word_vertically","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","undo","undo_play","undo_possible","undo_stack","use_long_dictionary","use_long_dictionary","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"bananagrams_solver"],[193,"alloc::string"],[194,"hashbrown::set"],[195,"alloc::vec"],[196,"core::fmt"],[197,"std::collections::hash::map"],[198,"tauri::state"],[199,"core::result"],[200,"core::option"],[201,"core::sync::atomic"],[202,"alloc::sync"],[203,"serde::ser"],[204,"core::any"]],"i":[0,0,0,0,0,0,0,11,0,16,16,12,0,0,0,0,11,0,0,11,0,16,0,16,0,0,12,0,0,21,21,1,28,13,0,16,21,1,11,12,23,28,13,27,32,16,21,1,11,12,23,28,13,27,32,0,0,1,11,12,13,1,11,12,13,0,0,28,12,21,27,16,11,11,12,12,16,21,1,11,12,23,28,13,27,32,0,0,0,0,0,0,0,0,1,16,21,1,11,12,23,28,13,27,32,0,0,0,0,21,13,32,23,0,13,13,21,27,13,13,1,0,0,0,0,0,1,0,32,21,0,23,28,27,32,0,1,23,32,1,11,12,13,11,12,16,21,1,11,12,23,28,13,27,32,16,21,1,11,12,23,28,13,27,32,0,0,16,21,1,11,12,23,28,13,27,32,0,1,32,21,21,27,16,21,1,11,12,23,28,13,27,32],"f":"````````````````````````````{{{d{b}}ffff}h}`````{{{d{b}}ffff{d{{l{{j{ff}}}}}}}{{n{{n{h}}}}}}{{{d{c}}}{{d{e}}}{}{}}000000000{{{d{A`c}}}{{d{A`e}}}{}{}}000000000{{{Ab{f}}{d{{n{f}}}}{d{{l{f}}}}}Ad}{{{Ab{f}}{Ab{f}}{d{{n{f}}}}f}Ad}{{{d{b}}}b}{{{d{Af}}}Af}{{{d{Ah}}}Ah}{{{d{Aj}}}Aj}{{{d{c}}{d{A`e}}}Al{}{}}000{{{d{{n{f}}}}}h}{{{d{An}}}{{n{f}}}}`{{{d{Ah}}{d{Ah}}}Ad}``{{{d{B`}}{d{A`Bb}}}Bd}{{{d{Af}}{d{A`Bb}}}Bd}0{{{d{Ah}}{d{A`Bb}}}Bd}0{cc{}}000000000{{{d{b}}{d{b}}ffffffff}{{l{{j{ff}}}}}}{{{d{b}}fff}{{j{ff}}}}{{{d{b}}ffff{d{{n{{j{ff}}}}}}}{{j{ffff}}}}{{{Bh{hBf}}{Bl{Bj}}}{{C`{Bnh}}}}{{hBf{Bl{Bj}}}{{C`{{Bh{CbCd}}h}}}}{{{d{b}}ffff}{{n{{j{{n{{j{ff}}}}ffff}}}}}}4{{{Bl{Bj}}}{{C`{Cfh}}}}{{{d{b}}ff}f}{ce{}{}}000000000{{{d{b}}fffffff{d{{l{{d{{n{f}}}}}}}}}Ad}0{{{d{b}}ffff{d{{n{{j{ff}}}}}}}Ad}{{{d{{n{f}}}}{d{{Ab{f}}}}}Ad}````{{}Al}``````{{}b}{{{Bh{hBf}}{Bl{Bj}}}{{C`{Chh}}}}{{{d{b}}ffff{d{{Ab{f}}}}{d{{l{{d{{n{f}}}}}}}}{d{{n{{n{f}}}}}}ff}{{Cj{{j{bffff}}}}}}{{{d{A`b}}ffff{d{{n{{d{{n{f}}}}}}}}{d{{l{{d{{n{f}}}}}}}}{Ab{f}}f{d{A`f}}{d{A`{Ab{f}}}}ff{d{{Cn{Cl}}}}}{{C`{{j{Adffff}}Al}}}}{{{d{A`b}}fffff{d{{l{{d{{n{f}}}}}}}}}{{Cj{{j{ffffff}}}}}}{{{d{A`b}}{d{A`{Ab{f}}}}ffff{Ab{f}}{d{{n{{d{{n{f}}}}}}}}{d{{l{{d{{n{f}}}}}}}}ff{d{{Cn{Cl}}}}}{{Cj{{j{ffff}}}}}}{{{d{A`b}}{d{{n{f}}}}ffAh{d{{Ab{f}}}}{d{A`{Ab{f}}}}}{{j{Ad{n{{j{ff}}}}{Ab{f}}Af}}}}{{{Bl{Bj}}}{{C`{D`h}}}}``{{{Bl{Bj}}}{{C`{Alh}}}}{{{d{Bn}}c}C`Db}{{{d{Ch}}c}C`Db}{{{d{Cf}}c}C`Db}{{{d{D`}}c}C`Db}{{ffAd{Bl{Bj}}}{{C`{Alh}}}}{{{d{A`b}}fff}Al}``{{{d{c}}}e{}{}}000{{{d{c}}}h{}}0{c{{C`{e}}}{}{}}0000000000000000000{{{d{A`b}}{d{{n{f}}}}ffff{d{{n{{d{{n{f}}}}}}}}{d{{l{{d{{n{f}}}}}}}}{Ab{f}}f{d{A`f}}{d{A`{Ab{f}}}}ff{d{{Cn{Cl}}}}}{{C`{{Cj{{j{Adffff}}}}Al}}}}0{{{d{c}}}Dd{}}000000000<{{{d{A`b}}{d{{n{{j{ff}}}}}}{d{A`{Ab{f}}}}}{{n{f}}}}````{ce{}{}}000000000","D":"Mh","p":[[5,"Board",0],[1,"reference"],[1,"usize"],[5,"String",193],[1,"tuple"],[5,"HashSet",194],[5,"Vec",195],[0,"mut"],[1,"array"],[1,"bool"],[6,"LetterUsage",0],[6,"Direction",0],[5,"GameState",0],[1,"unit"],[1,"str"],[6,"LetterComparison",0],[5,"Formatter",196],[8,"Result",196],[1,"i64"],[5,"HashMap",197],[5,"AppState",0],[5,"State",198],[5,"PlayableWords",0],[6,"Result",199],[1,"char"],[1,"u64"],[5,"CurrentSettings",0],[5,"Solution",0],[6,"Option",200],[5,"AtomicBool",201],[5,"Arc",202],[5,"UndoRedo",0],[10,"Serializer",203],[5,"TypeId",204]],"r":[],"b":[[72,"impl-Display-for-LetterUsage"],[73,"impl-Debug-for-LetterUsage"],[74,"impl-Debug-for-Direction"],[75,"impl-Display-for-Direction"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFUACgAAAAAAJAATADoABwBFAAAASAAEAHIAAACEAAMAjAAZAKgACQC4AAkA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
